// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int           @id @default(autoincrement())
  email             String        @unique
  username          String
  password          String
  filter_preference String
  Entry             Entry[]
  Rating            Rating[]
  Comment           Comment[]
  LastVisited       LastVisited[]
}

model Entry {
  id            Int       @id @default(autoincrement())
  atPlace       Place     @relation(fields: [placeId], references: [id])
  placeId       Int
  author        User      @relation(fields: [authorId], references: [id])
  authorId      Int
  title         String
  content       String
  creation_date DateTime  @default(now())
  tag           String[]
  Rating        Rating[]
  Comment       Comment[]
}

model Rating {
  rater    User  @relation(fields: [raterId], references: [id])
  raterId  Int
  value    Int
  ratingOf Entry @relation(fields: [entryId], references: [id])
  entryId  Int

  @@id([raterId, entryId])
}

model Comment {
  commenter     User     @relation(fields: [commenterId], references: [id])
  commenterId   Int
  content       String
  creation_date DateTime @default(now())
  commentOn     Entry    @relation(fields: [entryId], references: [id])
  entryId       Int

  @@id([commenterId, entryId])
}

model Place {
  id          Int           @id @default(autoincrement())
  lat         Float
  lng         Float
  name        String
  city        String
  Entry       Entry[]
  LastVisited LastVisited[]
}

model LastVisited {
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  place      Place    @relation(fields: [placeId], references: [id])
  placeId    Int
  visit_time DateTime @default(now())

  @@id([userId, placeId])
}
